'''
Required: results_{cassandra,mongo,mysql}.json that are generated by main.py

This script will plot the mean time deltas of each DB benchmark
'''

import json
import pandas as pd
import matplotlib.pyplot as plt


def format_dict(data):
    d = {'mean': {}}
    for b in data:
        if data[b]['success'] is False:
            continue
        d['mean'][b] = data[b]['time']['mean']
    return pd.DataFrame(d).sort_index()

def plot_difference(d1, d2, colname, title, fname):
    try:
        df = d1 - d2
        df.rename(columns={'mean': colname}, inplace=True)
        ax = df.plot.bar()
        ax.set_xlabel('Benchmark')
        ax.set_ylabel('Time (ms)')
        ax.set_title(title)
        plt.xticks(rotation=0)
        plt.savefig(fname, bbox_inches='tight')
        print(f'Saved {fname}')
    except Exception as e:
        print(f'Failed to plot {fname}')
        print(e)

def plot_db_difference(
    df1,
    df2,
    df1_drop_rows,
    df2_drop_rows,
    df1_rename_rows,
    df2_rename_rows,
    colname1,
    colname2,
    title,
    fname,
):
    try:
        df1_copy = df1.copy()
        for k in df1_drop_rows:
            try:
                df1_copy.drop(k, inplace=True)
            except Exception as _: pass
        df1_copy.rename(
            index=df1_rename_rows,
            inplace=True,
        )
        df2_copy = df2.copy()
        for k in df2_drop_rows:
            try:
                df2_copy.drop(k, inplace=True)
            except Exception as _: pass
        df2_copy.rename(
            index=df2_rename_rows,
            inplace=True,
        )

        df_compare = pd.DataFrame()
        df_compare[colname1] = df1_copy['mean']
        df_compare[colname2] = df2_copy['mean']
        ax = df_compare.plot.bar()
        ax.set_xlabel('Benchmark')
        ax.set_ylabel('Time (ms)')
        ax.set_title(title)
        plt.xticks(rotation=0)
        plt.savefig(fname, bbox_inches='tight')
        print(f'Saved {fname}')
    except Exception as e:
        print(f'Failed to plot {fname}')
        print(e)
    # df_compare['']
    # plot_difference(
    #     df1_copy,
    #     df2_copy,
    #     colname, title, fname
    # )

with open('results_mongo.json') as f:
    mongo_data = json.load(f)
with open('results_mysql.json') as f:
    mysql_data = json.load(f)
with open('results_cassandra.json') as f:
    cass_data = json.load(f)

dbs = ['mongo','mysql','cassandra']
langs = ['java', 'python']
dfs = {}
for lang in langs:
    for db, data in zip(dbs, [mongo_data, mysql_data, cass_data]):
        if db not in dfs:
            dfs[db] = {}
        dfs[db][lang] = format_dict(data[lang])

for db in dbs:
    plot_difference(
        dfs[db]['python'],
        dfs[db]['java'],
        'Python-Java',
        f'{db.capitalize()} Python-Java Difference',
        f'{db.capitalize()}_python_java_difference.png',
    )

# Plot difference of mongo & mysql
for lang in langs:
    plot_db_difference(
        dfs['mongo'][lang],
        dfs['mysql'][lang],
        [
            'MongoInsert100UnstructuredInsertMany',
            'MongoInsert100InsertOne',
            'MongoInsertUnstructured',
            'MongoInsert100UnstructuredInsertOne'
        ],
        [
            'MySQLCreateTable5Columns',
        ],
        {
            'MongoInsert100InsertMany': 'Insert100',
            'MongoSelect100': 'Select100',
        },
        {
            'MySQLInsert100': 'Insert100',
            'MySQLSelect100': 'Select100',
        },
        'Mongo',
        'MySQL',
        f'Mongo-MySQL Difference ({lang.capitalize()})',
        f'mongo_mysql_{lang}_difference.png',
    )

# Plot difference of mongo & cassandra
for lang in langs:
    plot_db_difference(
        dfs['mongo'][lang],
        dfs['cassandra'][lang],
        [
            'MongoInsert100UnstructuredInsertOne',
            'MongoInsert100InsertOne',
            'MongoSelect100',
        ],
        [
            'Example1',
            'CassandraCreateTable5Columns',
            'CassandraSelect100',
        ],
        {
            'MongoInsert100UnstructuredInsertMany': 'Insert100Unstructured',
            'MongoInsertUnstructured': 'InsertUnstructured',
            'MongoInsert100InsertMany': 'Insert100',
        },
        {
            'CassandraWriteUnstructured100': 'Insert100Unstructured',
            'CassandraWriteUnstructured': 'InsertUnstructured',
            'CassandraInsert100': 'Insert100',
        },
        'Mongo',
        'Cassandra',
        f'Mongo-Cassandra Difference ({lang.capitalize()})',
        f'mongo_cassandra_{lang}_difference.png',
    )


# Plot difference of mysql & cassandra
for lang in langs:
    plot_db_difference(
        dfs['mysql'][lang],
        dfs['cassandra'][lang],
        [
        ],
        [
            'Example1',
            'CassandraWriteUnstructured100',
            'CassandraWriteUnstructured',
        ],
        {
            'MySQLCreateTable5Columns': 'CreateTable5Columns',
            'MySQLInsert100': 'Insert100',
            'MySQLSelect100': 'Select100',
        },
        {
            'CassandraCreateTable5Columns': 'CreateTable5Columns',
            'CassandraInsert100': 'Insert100',
            'CassandraSelect100': 'Select100',
        },
        'MySQL',
        'Cassandra',
        f'MySQL-Cassandra Difference ({lang.capitalize()})',
        f'mysql_cassandra_{lang}_difference.png',
    )
